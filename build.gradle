plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id 'com.github.spotbugs' version '2.0.1'
}

version = '1.4.2'
sourceCompatibility = '11'

new File(projectDir, "VERSION").text = version;
new File(projectDir, "src/main/resources/VERSION").text = version;

repositories {
    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:28.0-jre'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'

    // https://mvnrepository.com/artifact/org.tinylog/tinylog-impl
    implementation group: 'org.tinylog', name: 'tinylog-impl', version: '2.0.1'
    
    // https://mvnrepository.com/artifact/de.mynttt/ezconf
    implementation group: 'de.mynttt', name: 'ezconf', version: '1.1.0'

    compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.12'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

run {
    standardInput = System.in
}

application {
    mainClassName = 'updatetool.Main'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "updatetool.Main"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

spotbugs {
    ignoreFailures = false
    effort = "max"
    sourceSets = [sourceSets.main]
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}